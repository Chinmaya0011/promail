// Import necessary modules
const express = require('express');
const multer = require('multer');
const pdfParse = require('pdf-parse');
const axios = require('axios');
const path = require('path');
const dotenv = require('dotenv');

// Load environment variables
dotenv.config();

const router = express.Router();

// Set up multer for file uploads
const storage = multer.memoryStorage();
const upload = multer({ storage: storage });

// Co:here API key from environment variables
const cohereAPIKey = process.env.COHERE_API_KEY;

// POST route to handle resume upload and email generation
router.post('/', upload.single('resume'), async (req, res) => {
  const { position, hrEmail, companyName } = req.body;

  // Validate required fields
  if (!position || !hrEmail || !companyName) {
    return res.status(400).json({
      message: 'Please provide position, HR email, and company name.',
    });
  }

  // Validate uploaded file
  if (!req.file) {
    return res.status(400).json({
      message: 'No file uploaded. Please upload a PDF resume.',
    });
  }

  // Check if the uploaded file is a PDF
  if (req.file.mimetype !== 'application/pdf') {
    return res.status(400).json({
      message: 'Invalid file type. Please upload a PDF resume.',
    });
  }

  try {
    // Parse text from the uploaded PDF file
    const pdfData = await pdfParse(req.file.buffer);
    const resumeText = pdfData.text;

    // Ensure the resume text is not empty
    if (!resumeText || resumeText.trim() === '') {
      return res.status(400).json({
        message: 'The uploaded PDF does not contain any readable text.',
      });
    }

    // Prepare the prompt for Co:here API
    const prompt = `
      You are an expert assistant for generating professional email content. Based on the following resume text, position, and company details, extract key qualifications and tailor a professional email body to apply for the role.
      - Position: "${position}"
      - Company Name: "${companyName}"
      - HR Email: "${hrEmail}"
      Resume Text: "${resumeText}"
      Write a professional email body. Ensure it is concise, emphasizes relevant skills, and mentions interest in the specific position at the company. Limit the email body to 100-120 words.
    `;

    // Make a request to Co:here API to generate email content
    const response = await axios.post(
      'https://api.cohere.ai/v1/generate',
      {
        model: 'command-r-plus',
        prompt: prompt,
        max_tokens: 300,
        temperature: 0.5, // Adjusted for more deterministic responses
      },
      {
        headers: {
          Authorization: `Bearer ${cohereAPIKey}`,
          'Content-Type': 'application/json',
        },
      }
    );

    // Log the Co:here API response to inspect it
    console.log('Co:here API Response:', response.data);

    // Check Co:here API response
    const generatedText = response.data?.generations?.[0]?.text?.trim();

    if (generatedText) {
      const emailBody = generatedText;

      // Send successful response with email details
      return res.status(200).json({
        message: 'Email generated successfully!',
        emailSubject: `Application for ${position} at ${companyName}`,
        emailBody,
        resumeText,
        position,
        companyName,
        hrEmail,
        fileName: req.file.originalname,
        fileType: req.file.mimetype,
      });
    } else {
      console.error('Co:here API did not return valid text:', response.data);
      return res.status(500).json({
        message: 'No valid email body generated by Co:here API.',
        response: response.data,
      });
    }
  } catch (error) {
    console.error('Error generating email or processing PDF:', error);
    console.error('Stack Trace:', error.stack);
    res.status(500).json({
      message: 'Error extracting data from PDF or generating email',
      error: {
        message: error.message,
        stack: process.env.NODE_ENV === 'development' ? error.stack : undefined,
      },
    });
  }
});

// Export the router to use in the main server
module.exports = router;
